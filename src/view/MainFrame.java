package view;

import beans.Password;
import java.awt.Dimension;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.DAOFactory;
import model.PasswordDAO;

public class MainFrame extends javax.swing.JFrame {

    private String letters;
    private final String lowercase = "abcdefghijklmnopqrstuvwxyz";
    private final String uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    private final String numbers = "0123456789";
    private final String symbols = "][?/~#`!@$^&*+=|:;>";

    private static PasswordDAO passwordDAO;

    public MainFrame() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/img/logo.png")).getImage());
        jDialog1.setIconImage(new ImageIcon(getClass().getResource("/img/logo.png")).getImage());
        jDialog1.setTitle("Generate Password");
        passwordDAO = DAOFactory.getPasswordDAO();
        fillJTable();
        pwLengthSlider.setValue(0);
    }

    private String generatePassword() {
        String randomstring = "";
        letters = "";
        if (lowercaseCB.isSelected()) {
            letters += lowercase;
        }
        if (uppercaseCB.isSelected()) {
            letters += uppercase;
        }
        if (numbersCB.isSelected()) {
            letters += numbers;
        }
        if (symbolsCB.isSelected()) {
            letters += symbols;
        }

        if (letters.length() > 0) {
            int length = ((pwLengthSlider.getValue() / 10) + 8);
            for (int i = 0; i < length; i++) {
                int rlet = (int) (Math.random() * letters.length());
                randomstring += letters.charAt(rlet);
            }

            if ((numbersCB.isSelected() && !(randomstring.contains("0")
                    || randomstring.contains("1")
                    || randomstring.contains("2")
                    || randomstring.contains("3")
                    || randomstring.contains("4")
                    || randomstring.contains("5")
                    || randomstring.contains("6")
                    || randomstring.contains("7")
                    || randomstring.contains("8")
                    || randomstring.contains("9"))) || (symbolsCB.isSelected() && !(randomstring.contains("]")
                    || randomstring.contains("[")
                    || randomstring.contains("?")
                    || randomstring.contains("/")
                    || randomstring.contains("~")
                    || randomstring.contains("#")
                    || randomstring.contains("`")
                    || randomstring.contains("!")
                    || randomstring.contains("@")
                    || randomstring.contains("$")
                    || randomstring.contains("*")
                    || randomstring.contains("+")
                    || randomstring.contains("=")
                    || randomstring.contains("|")
                    || randomstring.contains(":")
                    || randomstring.contains(";")
                    || randomstring.contains(">")))) {
                return generatePassword();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Password can not be generated. Please check at least one characters set.");
        }
        return randomstring;
    }

    private void fillJTable() {
        for (int x = 0; x < jTable1.getRowCount(); x++) {
            jTable1.setValueAt(null, x, 0);
            jTable1.setValueAt(null, x, 1);
            jTable1.setValueAt(null, x, 2);
            jTable1.setValueAt(null, x, 3);

        }
        List<Password> list = passwordDAO.getAllAccount();
        int x = 0;
        for (Password password : list) {
            jTable1.setValueAt(password.getId(), x, 0);
            jTable1.setValueAt(password.getUserAccount(), x, 1);
            jTable1.setValueAt(password.getPasswordAccount(), x, 2);
            jTable1.setValueAt(password.getAccount(), x, 3);
            x++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        userTxt = new javax.swing.JTextField();
        passwordTxt = new javax.swing.JTextField();
        pwLengthSlider = new javax.swing.JSlider();
        uppercaseCB = new javax.swing.JCheckBox();
        lowercaseCB = new javax.swing.JCheckBox();
        symbolsCB = new javax.swing.JCheckBox();
        numbersCB = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        accountTxt = new javax.swing.JTextField();
        saveAccountBtn = new javax.swing.JButton();
        generatePasswordBtn = new javax.swing.JButton();
        pwLengthLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        createAccountBtn = new javax.swing.JButton();
        deleteAccountBtn = new javax.swing.JButton();

        jDialog1.setIconImage(null);
        jDialog1.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        jLabel1.setText("User");

        jLabel2.setText("Password");

        jLabel3.setText("Length");

        jLabel4.setText("Characters & Sympbols");

        pwLengthSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                pwLengthSliderStateChanged(evt);
            }
        });

        uppercaseCB.setText("A_Z");

        lowercaseCB.setText("a_z");

        symbolsCB.setText("Symbols");

        numbersCB.setText("0_9");

        jLabel5.setText("Account");

        saveAccountBtn.setText("Save");
        saveAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAccountBtnActionPerformed(evt);
            }
        });

        generatePasswordBtn.setText("Generate");
        generatePasswordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatePasswordBtnActionPerformed(evt);
            }
        });

        pwLengthLabel.setText("8 characters");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1))
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(symbolsCB)
                                    .addComponent(uppercaseCB))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(numbersCB)
                                    .addComponent(lowercaseCB)))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(passwordTxt)
                                .addComponent(userTxt)
                                .addComponent(pwLengthSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(accountTxt)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(generatePasswordBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pwLengthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(saveAccountBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(generatePasswordBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(pwLengthSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pwLengthLabel))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(uppercaseCB)
                            .addComponent(lowercaseCB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(symbolsCB)
                            .addComponent(numbersCB)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveAccountBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Password Accounts");
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "User", "Password", "Account"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
        }

        createAccountBtn.setText("Create");
        createAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountBtnActionPerformed(evt);
            }
        });

        deleteAccountBtn.setText("Delete");
        deleteAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAccountBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(deleteAccountBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createAccountBtn)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createAccountBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(deleteAccountBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        setSize(new java.awt.Dimension(552, 332));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void createAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountBtnActionPerformed
        accountTxt.setText("");
        userTxt.setText("");
        passwordTxt.setText("");
        lowercaseCB.setSelected(false);
        uppercaseCB.setSelected(false);
        symbolsCB.setSelected(false);
        numbersCB.setSelected(false);

        jDialog1.setSize(new Dimension(468, 374));
        jDialog1.setLocationRelativeTo(this);
        jDialog1.setVisible(true);
    }//GEN-LAST:event_createAccountBtnActionPerformed

    private int stateChanged = 1;
    private void pwLengthSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_pwLengthSliderStateChanged
        stateChanged--;
        if (stateChanged < 0) {
            passwordTxt.setText(generatePassword());
        }
        pwLengthLabel.setText(((pwLengthSlider.getValue() / 10) + 8) + " characters");
    }//GEN-LAST:event_pwLengthSliderStateChanged


    private void generatePasswordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatePasswordBtnActionPerformed
        passwordTxt.setText(generatePassword());
    }//GEN-LAST:event_generatePasswordBtnActionPerformed

    private void saveAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAccountBtnActionPerformed
        if (id == 0) {
            Password password = new Password(accountTxt.getText(), userTxt.getText(), passwordTxt.getText());
            if (passwordDAO.addPassword(password)) {
                JOptionPane.showMessageDialog(null, "Add success");
            }
        } else {
            Password password = new Password(id, accountTxt.getText(), userTxt.getText(), passwordTxt.getText());
            if (passwordDAO.updateAccount(password)) {
                JOptionPane.showMessageDialog(null, "Update success");
            }
            id = 0;
        }

        fillJTable();
        jDialog1.hide();


    }//GEN-LAST:event_saveAccountBtnActionPerformed

    private int id = 0;

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 2 && jTable1.getValueAt(jTable1.getSelectedRow(), 0) != null) {
            id = (int) jTable1.getValueAt(jTable1.getSelectedRow(), 0);

            Password password = passwordDAO.getAccount(id);

            accountTxt.setText(password.getAccount());
            userTxt.setText(password.getUserAccount());
            passwordTxt.setText(password.getPasswordAccount());

            jDialog1.setSize(new Dimension(468, 374));
            jDialog1.setLocationRelativeTo(this);
            jDialog1.setVisible(true);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void deleteAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAccountBtnActionPerformed
        if (jTable1.getSelectedRow() != -1 && jTable1.getValueAt(jTable1.getSelectedRow(), 0) != null) {
            Object[] options = {"Yes, please",
                "No way!"};
            int n = JOptionPane.showOptionDialog(this,
                    "Are you sure you want to delete this account ?",
                    "Delete Account",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null, //do not use a custom Icon
                    options, //the titles of buttons
                    options[0]); //default button title
            if (n == 0) {
                passwordDAO.deleteAccount((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0));
                JOptionPane.showMessageDialog(null, "Delete success");
                fillJTable();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select row");
        }

    }//GEN-LAST:event_deleteAccountBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accountTxt;
    private javax.swing.JButton createAccountBtn;
    private javax.swing.JButton deleteAccountBtn;
    private javax.swing.JButton generatePasswordBtn;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JCheckBox lowercaseCB;
    private javax.swing.JCheckBox numbersCB;
    private javax.swing.JTextField passwordTxt;
    private javax.swing.JLabel pwLengthLabel;
    private javax.swing.JSlider pwLengthSlider;
    private javax.swing.JButton saveAccountBtn;
    private javax.swing.JCheckBox symbolsCB;
    private javax.swing.JCheckBox uppercaseCB;
    private javax.swing.JTextField userTxt;
    // End of variables declaration//GEN-END:variables
}
